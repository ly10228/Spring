<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--抽象bean不能IOC容器实例化 只能被用来继承 abstract="true"
    若某一个class属性没有被指定 必须是一个抽象bean-->
    <bean id="address" class="com.ly.spring.bean.autowire.Address" abstract="true">
        <property name="city" value="上海"/>
        <property name="street" value="南京东路"/>
    </bean>

    <!--bean的配置继承-->
    <bean id="address1" parent="address">
        <property name="street" value="北京东路"/>
    </bean>

    <!--要求在配置person时，必须关联一个car  Person依赖car这个bean-->
    <bean id="person" class="com.ly.spring.bean.autowire.Person">
        <property name="name" value="ly"/>
        <property name="address" ref="address1"/>
    </bean>

    <bean id="car" class="com.ly.spring.bean.autowire.Car">
        <property name="brand" value="雪佛兰"/>
        <property name="price" value="18.5"/>
    </bean>

    <!--
    Spring允许用户通过depends-on属性设定bean的前置依赖bean，前置依赖bean会在本Bean实例化之前创建好
    如果前置依赖于多个Bean，则可以通过逗号、空格的方式配置bean的名称
    -->
    <bean id="person1" class="com.ly.spring.bean.autowire.Person" depends-on="car">
        <property name="name" value="ly"/>
    </bean>

    <bean id="person2"  class="com.ly.spring.bean.autowire.Person" depends-on="car,address1">
        <property name="name" value="ly"/>
    </bean>

</beans>